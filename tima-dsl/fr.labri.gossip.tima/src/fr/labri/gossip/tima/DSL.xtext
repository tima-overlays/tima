grammar fr.labri.gossip.tima.DSL with org.eclipse.xtext.common.Terminals

generate dSL "http://www.labri.fr/gossip/tima/DSL"

Model:
	header=Header
	('messages' messages+=Message*)?
	automatons+=Automata*
;
 
Message:
	name=ID
	('(' Fields ')')?
	(':' FieldDeclaration)?
;


fragment
FieldDeclaration:
	declaredFields+=ID (',' declaredFields+=ID)*
;

Automata:
	'automaton' name=ID states+=State* 
;

State:
	modifiers+=Modifier* 'state' name=ID actions+=CompoundAction* transitions+=Transition*
;

Modifier:
	(urgent='urgent') | (initial='initial') | (term='terminate')
;

CompoundAction:
	name=ActionType actions+=Action+	
;

//Action:
//	 externalAction=ExternalAction |
//	 '!' msg=MessageType ( 'with' fields+=Field+)? '@' (address=STRING':')?target=[Automata]
//;

Action:
	 builtinAction=BuiltinAction |
	 externalAction=ExternalAction |
	 msg=SendMessageAction
;

fragment
Fields:
	fields+=Field (',' fields+=Field)*
;

Field:
	name=ID ':' value=STRING
;

BuiltinAction:
	name=ID Fields?
;

ExternalAction:
	name=EXTERNAL_NAME
;

SendMessageAction:
	'!' msg=MessageType
	 	('(' Fields? ')' | Fields)?
	 	'@' (address=STRING | target=[Automata])
;

Transition:
	'when' guards=Guard '=>' target=[State]
;

Guard:
	('?' msg=MessageType |
	builtinGuard=BuiltinAction |
	externalGuard=ExternalAction) ('within' value=INT unit=TimeUnit)?
	| 'timeout' {Guard} //value=INT unit=Unit
;

MessageType: 
	msg=[Message] |
	'_' {MessageType}
;


Header:
	'name' name=ID ('description' description=STRING)?
;

enum TimeUnit: MSEC='msec' | SEC='sec';
enum ActionType: DO='do' | ON_LEAVE='do-on-leave' | EACH_TIME='do-each_time';

terminal EXTERNAL_NAME:  '`' ( '\\' . | !('\\'|'`') )* '`';